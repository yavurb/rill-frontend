---
import {
  CardHeader,
  Card,
  CardDescription,
  CardFooter,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";

interface Props {
  id: string;
  title: string;
}

const { id, title } = Astro.props;
---

<Card id={id} className="w-full mx-auto">
  <CardHeader>
    <CardTitle>{title}</CardTitle>
    <CardDescription> Here goes the broadcast description </CardDescription>
  </CardHeader>
  <CardFooter>
    <Button className="w-full" join-broadcast-button="true"> Join </Button>
  </CardFooter>
</Card>

<script>
  import { actions } from "astro:actions";

  const buttons = document.querySelectorAll("[join-broadcast-button]");

  // FIXME: Should we just redirect to a new page and join the broadcast there?
  buttons.forEach((button) => {
    button.addEventListener("click", async () => {
      console.log("Joining...");
      const broadcastID = button.id;
      let pc = new RTCPeerConnection({
        iceServers: [
          {
            urls: "stun:stun.l.google.com:19302",
          },
        ],
      });
      pc.oniceconnectionstatechange = (_) => console.log(pc.iceConnectionState);
      pc.onicecandidate = async (event) => {
        if (event.candidate === null) {
          const sd = btoa(JSON.stringify(pc.localDescription));

          const { data: sdp, error } = await actions.joinBroadcast({
            broadcastID,
            sdp: sd,
          });
          if (error || !sdp) {
            console.error("Error joining broadcast", error);
          }

          if (sdp) {
            pc.setRemoteDescription(JSON.parse(atob(sdp)));
          }
        }
      };

      // TODO: Redicrect to a new page
      pc.ontrack = (event) => {
        const video: HTMLVideoElement = document.getElementById(
          "rill-player",
        ) as HTMLVideoElement;

        if (video === null) {
          throw new Error("Video element not found");
        }

        video.srcObject = event.streams[0];
        video.autoplay = true;
        video.controls = true;
      };

      pc.addTransceiver("video");
      let offer = await pc.createOffer();
      pc.setLocalDescription(offer);
    });
  });
</script>
